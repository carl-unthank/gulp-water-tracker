@using Gulp.Shared.DTOs
@using Gulp.Client.Components.UI

<div class="water-intake-list-view">
    @if (IsLoading)
    {
        <LoadingIndicator Size="medium" Message="Loading water intakes..." ContainerClass="py-12" />
    }
    else if (WaterIntakes?.Any() == true)
    {
        <div class="intake-list">
            @foreach (var intake in WaterIntakes)
            {
                <WaterIntakeListItem 
                    WaterIntake="@intake" 
                    OnEdit="@HandleEdit"
                    OnDelete="@HandleDelete" />
            }
        </div>
        
        @if (ShowLoadMore && OnLoadMore.HasDelegate)
        {
            <div class="load-more-container">
                <Button Variant="ButtonVariant.OutlinePrimary"
                        OnClick="@(() => OnLoadMore.InvokeAsync())"
                        IsLoading="@IsLoadingMore"
                        IsDisabled="@IsLoadingMore">
                    Load More
                </Button>
            </div>
        }
    }
    else
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-tint"></i>
            </div>
            <h4>@EmptyTitle</h4>
            <p class="text-muted">@EmptyMessage</p>
            @if (ShowAddButton && OnAdd.HasDelegate)
            {
                <Button Variant="ButtonVariant.Primary"
                        Icon="fas fa-plus"
                        OnClick="@(() => OnAdd.InvokeAsync())">
                    Add Water Intake
                </Button>
            }
        </div>
    }
</div>

@code {
    [Parameter] public IEnumerable<WaterIntakeDto>? WaterIntakes { get; set; }
    [Parameter] public bool IsLoading { get; set; }
    [Parameter] public bool IsLoadingMore { get; set; }
    [Parameter] public bool ShowLoadMore { get; set; }
    [Parameter] public bool ShowAddButton { get; set; } = true;
    [Parameter] public string EmptyTitle { get; set; } = "No Water Intakes";
    [Parameter] public string EmptyMessage { get; set; } = "Start tracking your hydration by adding your first water intake.";
    
    [Parameter] public EventCallback<WaterIntakeDto> OnEdit { get; set; }
    [Parameter] public EventCallback<WaterIntakeDto> OnDelete { get; set; }
    [Parameter] public EventCallback OnAdd { get; set; }
    [Parameter] public EventCallback OnLoadMore { get; set; }

    private async Task HandleEdit(WaterIntakeDto intake)
    {
        await OnEdit.InvokeAsync(intake);
    }

    private async Task HandleDelete(WaterIntakeDto intake)
    {
        await OnDelete.InvokeAsync(intake);
    }
}

<style>
    .water-intake-list-view {
        width: 100%;
    }



    .intake-list {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .load-more-container {
        text-align: center;
        margin-top: 2rem;
        padding: 1rem;
    }

    .empty-state {
        text-align: center;
        padding: 3rem 1rem;
    }

    .empty-icon {
        font-size: 3rem;
        color: #d1d5db;
        margin-bottom: 1rem;
    }

    .empty-state h4 {
        color: #374151;
        margin-bottom: 0.5rem;
    }

    .empty-state p {
        margin-bottom: 1.5rem;
        max-width: 400px;
        margin-left: auto;
        margin-right: auto;
    }

    .btn {
        padding: 0.75rem 1rem;
        border: none;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .btn-primary {
        background-color: #3b82f6;
        color: white;
    }

    .btn-primary:hover:not(:disabled) {
        background-color: #2563eb;
    }

    .btn-outline-primary {
        background-color: transparent;
        color: #3b82f6;
        border: 1px solid #3b82f6;
    }

    .btn-outline-primary:hover:not(:disabled) {
        background-color: #3b82f6;
        color: white;
    }

    .btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }


</style>
