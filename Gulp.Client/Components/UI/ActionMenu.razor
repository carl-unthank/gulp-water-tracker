@using Gulp.Client.Services
@inject ActionMenuService ActionMenuService
@implements IDisposable

<div class="relative">
    <!-- Action Menu Button -->
    <button @onclick="ToggleMenu"
            class="flex items-center space-x-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-xl transition-all duration-200 hover:scale-105 shadow-lg">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"></path>
        </svg>
        <span class="text-sm font-medium">Actions</span>
    </button>

    @if (ActionMenuService.IsMenuOpen(ItemId))
    {
        <div class="absolute right-0 top-full mt-2 w-48 bg-white rounded-2xl shadow-xl border border-gray-200 py-2 z-[99999] transform transition-all duration-200">
            <button @onclick="HandleEdit"
                    class="w-full px-4 py-3 text-left text-sm text-gray-700 hover:bg-blue-50 flex items-center space-x-3 transition-colors duration-200">
                <div class="w-8 h-8 bg-blue-100 rounded-xl flex items-center justify-center">
                    <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                    </svg>
                </div>
                <div>
                    <div class="font-medium">Update</div>
                    <div class="text-xs text-gray-500">Edit this intake</div>
                </div>
            </button>
            
            <button @onclick="HandleDelete"
                    class="w-full px-4 py-3 text-left text-sm text-gray-700 hover:bg-red-50 flex items-center space-x-3 transition-colors duration-200">
                <div class="w-8 h-8 bg-red-100 rounded-xl flex items-center justify-center">
                    <svg class="w-4 h-4 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                </div>
                <div>
                    <div class="font-medium">Delete</div>
                    <div class="text-xs text-gray-500">Remove this intake</div>
                </div>
            </button>
        </div>
    }
</div>

@code {
    [Parameter, EditorRequired] public int ItemId { get; set; }
    [Parameter] public EventCallback OnEdit { get; set; }
    [Parameter] public EventCallback OnDelete { get; set; }

    protected override void OnInitialized()
    {
        ActionMenuService.StateChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ActionMenuService.StateChanged -= StateHasChanged;
    }

    private void ToggleMenu()
    {
        ActionMenuService.ToggleMenu(ItemId);
    }

    private async Task HandleEdit()
    {
        ActionMenuService.CloseAllMenus();
        await OnEdit.InvokeAsync();
    }

    private async Task HandleDelete()
    {
        ActionMenuService.CloseAllMenus();
        await OnDelete.InvokeAsync();
    }
}
