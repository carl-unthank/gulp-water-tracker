@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@implements IDisposable

<AuthorizeView>
    <Authorized>
        <!-- Android-style Bottom Navigation with FAB -->
        <nav class="fixed bottom-0 left-0 right-0 bg-white shadow-lg border-t border-gray-200 md:hidden z-50">
            <div class="flex items-center h-16 px-4 relative">
                <!-- Home Tab -->
                <button @onclick='() => NavigateToTab("/")'
                        class="flex-1 flex flex-col items-center justify-center py-2 @GetTabClass("/")">
                    <svg class="w-6 h-6 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
                    </svg>
                    <span class="text-xs font-medium">Home</span>
                </button>

                <!-- Add Water FAB (Elevated) -->
                <div class="flex-shrink-0 mx-4">
                    <button @onclick="OnAddWaterClick"
                            class="w-16 h-16 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full shadow-xl flex items-center justify-center text-white active:scale-95 transition-all duration-150 -mt-8 border-4 border-white">
                        <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2.5">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                    </button>
                </div>

                <!-- History Tab -->
                <button @onclick='() => NavigateToTab("/history")'
                        class="flex-1 flex flex-col items-center justify-center py-2 @GetTabClass("/history")">
                    <svg class="w-6 h-6 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                    </svg>
                    <span class="text-xs font-medium">History</span>
                </button>
            </div>
        </nav>

    <!-- Spacer for fixed bottom nav -->
    <div class="h-16 md:hidden"></div>
    </Authorized>
</AuthorizeView>

@code {
    [Parameter] public EventCallback OnAddWater { get; set; }

    private string currentPath = "";

    protected override void OnInitialized()
    {
        currentPath = Navigation.ToBaseRelativePath(Navigation.Uri);
        Navigation.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {
        currentPath = Navigation.ToBaseRelativePath(e.Location);
        InvokeAsync(StateHasChanged);
    }

    private string GetTabClass(string path)
    {
        var isActive = currentPath == path.TrimStart('/') ||
                      (path == "/" && string.IsNullOrEmpty(currentPath));

        return isActive
            ? "text-blue-600"
            : "text-gray-400 hover:text-gray-600 transition-colors";
    }

    private void NavigateToTab(string path)
    {
        Navigation.NavigateTo(path);
    }

    private async Task OnAddWaterClick()
    {
        await OnAddWater.InvokeAsync();
    }

    public void Dispose()
    {
        Navigation.LocationChanged -= OnLocationChanged;
    }
}
